name: Publish
on:
  workflow_dispatch:
    inputs:
      environment:
        description: The environment to publish to
        type: environment

env:
  JDK_VERSION: "19"
  WORKSPACE_ARCHIVE: workspace.tar
  WORKSPACE_ARTIFACT: build-results


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JDK_VERSION }}

      - name: Gradle Assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble --info -S --show-version
          gradle-home-cache-cleanup: true

      - name: Tar files
        run: tar -cvf ${{ env.WORKSPACE_ARCHIVE }} .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: ${{ env.WORKSPACE_ARCHIVE }}
          retention-days: 1


  check:
    name: Check
    strategy:
      matrix:
        jdk: [ 11, 17, 19 ]
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: .

      - name: Untar
        run: |
          tar -xvf ${{ env.WORKSPACE_ARCHIVE }}
          rm ${{ env.WORKSPACE_ARCHIVE }}

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JDK_VERSION }}

      - name: Gradle Check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check --info -S --show-version -Ptoolchain.test.version=${{ matrix.jdk }}
          gradle-home-cache-cleanup: true


  create-staging-repository:
    name: Create Staging Repository
    needs: check
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - id: create
        uses: TheMrMilchmann/nexus-actions/create-staging-repo@v2
        with:
          base-url: ${{ vars.SONATYPE_BASE_URL }}
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging-profile-id: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          description: ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}
    outputs:
      staging-repository-id: ${{ steps.create.outputs.staging-repository-id }}


  nexus-upload:
    name: Upload to Nexus
    needs: create-staging-repository
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: .

      - name: Untar
        run: |
          tar -xvf ${{ env.WORKSPACE_ARCHIVE }}
          rm ${{ env.WORKSPACE_ARCHIVE }}

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JDK_VERSION }}

      - name: Gradle Publish
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_stagingRepositoryId: ${{ needs.create-staging-repository.outputs.staging-repository-id }}
        with:
          arguments: publishAllPublicationsToMavenRepository --info -S --show-version
          gradle-home-cache-cleanup: true


  close-staging-repository:
    name: Close Staging Repository
    needs: [create-staging-repository, nexus-upload]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: TheMrMilchmann/nexus-actions/close-staging-repo@v2
        with:
          base-url: ${{ vars.SONATYPE_BASE_URL }}
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging-repository-id: ${{ needs.create-staging-repository.outputs.staging-repository-id }}
          description: ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}


  nexus-release:
    name: Release to Nexus
    needs: [create-staging-repository, close-staging-repository]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Release Staging Repository
        uses: TheMrMilchmann/nexus-actions/release-staging-repo@v2
        with:
          base-url: ${{ vars.SONATYPE_BASE_URL }}
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging-repository-id: ${{ needs.create-staging-repository.outputs.staging-repository-id }}
          description: ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}


  # So, what's happening here?
  #
  # Basically, restoring the workspace state between jobs is incredibly annoying.
  # We can get reasonable support by using the upload-/download-artifact
  # actions, but they suffer from a severe limitation:
  # GH Actions has a storage limit and the minimum retention is 24 hours...
  #
  # Since the storage quota is limited, we have to make sure that the artifact
  # is removed. Unfortunately, there is no official way to do this, so we resort
  # to a third party action for now.
  #
  # See also: https://github.com/actions/upload-artifact/issues/290
  cleanup:
    name: Cleanup
    if: ${{ always() }}
    needs: nexus-release
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        uses: GeekyEggo/delete-artifact@54ab544f12cdb7b71613a16a2b5a37a9ade990af
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}